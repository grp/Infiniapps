
#define IFConfigurationTweakIdentifier Infiniboard
#define IFConfigurationListClass SBIconListView
#define IFConfigurationFullPages (dlopen("/Library/MobileSubstrate/DynamicLibraries/Iconoclasm.dylib", RTLD_LAZY) != NULL)

#define IFPreferencesRestoreEnabled @"RestoreEnabled", NO
#define IFPreferencesFastRestoreEnabled @"FastRestoreEnabled", NO

#import "infinishared/Infinilist.h"
#import "infinishared/Preferences.h"

%group IFInfiniboard

static void IFRestoreIconLists() {
    IFPreferencesApply();

    IFListsIterateViews(^(SBIconListView *listView, UIScrollView *scrollView) {
        if (IFPreferencesBoolForKey(IFPreferencesRestoreEnabled)) {
            [scrollView setContentOffset:CGPointZero animated:NO];
        }

        if (IFPreferencesIntForKey(IFPreferencesScrollbarStyle) != kIFScrollbarStyleNone) {
            [scrollView flashScrollIndicators];
        }
    });
}

static NSUInteger IFFlagFolderOpening = 0;

%hook IFConfigurationListClass

- (NSUInteger)rowForIcon:(SBIcon *)icon {
    SBIconView *iconView = IFIconViewForIcon(icon);
    NSUInteger ret = %orig;

    if (IFFlagFolderOpening) {
        if (IFPreferencesBoolForKey(IFPreferencesPagingEnabled)) {
            ret %= IFSizingDefaultDimensionsForIconList(self).rows;
        } else {
            CGPoint origin = [iconView frame].origin;

            UIScrollView *scrollView = IFListsScrollViewForListView(self);
            origin.y -= [scrollView contentOffset].y;

            ret = [self rowAtPoint:origin];
        }
    }

    return ret;
}

%new(i@:)
- (int)infiniboardDefaultRows {
	int result;
	IFFlag(IFFlagDefaultDimensions) {
		result = [self iconRowsForCurrentOrientation];
	}
	return result;
}

%end

%hook SBIconController

- (void)setOpenFolder:(SBFolder *)folder {
    %orig;

    if (folder != nil) {
        SBIcon *folderIcon = [[self openFolder] icon];

        SBIconListView *listView = IFIconListContainingIcon(folderIcon);
        UIScrollView *scrollView = IFListsScrollViewForListView(listView);

        if (scrollView != nil) {
            // We have a scroll view, so this is a list we care about.
            SBIconView *folderIconView = IFIconViewForIcon(folderIcon);
            [scrollView scrollRectToVisible:[folderIconView frame] animated:NO];
        } else {
            // Get last icon on current page; scroll that icon to visible.
            // (This fixes visual issues when icons are partially scrolled
            // between rows and a folder is opened when it's in the dock.)
            CGPoint point = CGPointMake(0, [listView bounds].size.height);
            SBIcon *lastIcon = [listView iconAtPoint:point index:NULL];
            SBIconView *lastIconView = IFIconViewForIcon(lastIcon);

            if (lastIconView != nil) {
                [scrollView scrollRectToVisible:[lastIconView frame] animated:NO];
            }
        }
    }
}

- (CGRect)_contentViewRelativeFrameForIcon:(SBIcon *)icon {
    SBIconListView *listView = IFIconListContainingIcon(icon);
    UIScrollView *scrollView = IFListsScrollViewForListView(listView);

    if (IFIconListIsValid(listView) && IFFlagFolderOpening && IFPreferencesBoolForKey(IFPreferencesClipsToBounds)) {
        SBIconView *iconView = IFIconViewForIcon(icon);
        CGRect iconRect = [iconView frame];

        CGRect scrollVisibleFrame = [scrollView frame];
        scrollVisibleFrame.origin = [scrollView contentOffset];

        if (CGRectIntersectsRect(iconRect, scrollVisibleFrame)) {
            return %orig;
        } else {
            CGRect frame = %orig;
            return CGRectMake(-1000, -1000, frame.size.width, frame.size.height);
        }
    } else {
        return %orig;
    }
}

- (void)openFolder:(SBFolder *)folder animated:(BOOL)animated fromSwitcher:(BOOL)fromSwitcher {
    // Let -iconAtPoint: know that it can slide SpringBoard "upwards" if necessary.
    IFFlag(IFFlagFolderOpening) {
        IFFlag(IFFlagDefaultDimensions) {
            %orig;
        }
    }
}

- (void)scrollViewDidEndDecelerating:(UIScrollView *)scrollView {
    if (IFPreferencesBoolForKey(IFPreferencesFastRestoreEnabled)) {
        IFListsIterateViews(^(SBIconListView *listView, UIScrollView *scrollView) {
            [scrollView setContentOffset:CGPointZero animated:NO];
        });
    }

    %orig;
}

%end

%hook SBUIController

- (void)restoreIconList:(BOOL)animated {
    %orig;
    IFRestoreIconLists();
}

- (void)restoreIconListAnimated:(BOOL)animated {
    %orig;
    IFRestoreIconLists();
}

- (void)restoreIconListAnimated:(BOOL)animated animateWallpaper:(BOOL)animateWallpaper {
    %orig;
    IFRestoreIconLists();
}

- (void)restoreIconListAnimated:(BOOL)animated animateWallpaper:(BOOL)wallpaper keepSwitcher:(BOOL)switcher {
    %orig;
    IFRestoreIconLists();
}

- (void)restoreIconListAnimated:(BOOL)animated delay:(NSTimeInterval)delay {
    %orig;
    IFRestoreIconLists();
}

- (void)restoreIconListAnimated:(BOOL)animated delay:(NSTimeInterval)delay animateWallpaper:(BOOL)wallpaper keepSwitcher:(BOOL)switcher {
    %orig;
    IFRestoreIconLists();
}

- (void)restoreIconListAnimatedIfNeeded:(BOOL)needed animateWallpaper:(BOOL)wallpaper {
    %orig;
    IFRestoreIconLists();
}

- (void)restoreIconListForSuspendGesture {
    %orig;
    IFRestoreIconLists();
}

%end

%end

/* Constructor {{{ */

__attribute__((constructor)) static void infiniboard_init() {
    NSAutoreleasePool *pool = [[NSAutoreleasePool alloc] init];

    dlopen("/Library/MobileSubstrate/DynamicLibraries/_iPhoneRotator.dylib", RTLD_LAZY);
    dlopen("/Library/MobileSubstrate/DynamicLibraries/SixRows.dylib", RTLD_LAZY);
    dlopen("/Library/MobileSubstrate/DynamicLibraries/7x7SpringBoard.dylib", RTLD_LAZY);
    dlopen("/Library/MobileSubstrate/DynamicLibraries/CategoriesSB.dylib", RTLD_LAZY);
    dlopen("/Library/MobileSubstrate/DynamicLibraries/FCSB.dylib", RTLD_LAZY);
    dlopen("/Library/MobileSubstrate/DynamicLibraries/Iconoclasm.dylib", RTLD_LAZY);
    dlopen("/Library/MobileSubstrate/DynamicLibraries/FiveIRows.dylib", RTLD_LAZY);
    dlopen("/Library/MobileSubstrate/DynamicLibraries/FiveIRowsPart1.dylib", RTLD_LAZY);
    dlopen("/Library/MobileSubstrate/DynamicLibraries/FiveIRowsPart2.dylib", RTLD_LAZY);
    dlopen("/Library/MobileSubstrate/DynamicLibraries/FiveIRowsPart3.dylib", RTLD_LAZY);
    dlopen("/Library/MobileSubstrate/DynamicLibraries/OverBoard.dylib", RTLD_LAZY);
    dlopen("/Library/MobileSubstrate/DynamicLibraries/LockInfo.dylib", RTLD_LAZY);

    IFPreferencesInitialize(@"com.chpwn.infiniboard", IFPreferencesApply);

    dlopen("/Library/MobileSubstrate/DynamicLibraries/IconSupport.dylib", RTLD_LAZY);
    [[objc_getClass("ISIconSupport") sharedInstance] addExtension:@"infiniboard"];

    %init(IFInfiniboard);
    %init(IFBasic);

    [pool release];
}

/* }}} */

